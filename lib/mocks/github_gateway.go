// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/motemen/prchecklist/v2/lib/usecase (interfaces: GitHubGateway)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	prchecklist "github.com/motemen/prchecklist/v2"
	reflect "reflect"
)

// MockGitHubGateway is a mock of GitHubGateway interface
type MockGitHubGateway struct {
	ctrl     *gomock.Controller
	recorder *MockGitHubGatewayMockRecorder
}

// MockGitHubGatewayMockRecorder is the mock recorder for MockGitHubGateway
type MockGitHubGatewayMockRecorder struct {
	mock *MockGitHubGateway
}

// NewMockGitHubGateway creates a new mock instance
func NewMockGitHubGateway(ctrl *gomock.Controller) *MockGitHubGateway {
	mock := &MockGitHubGateway{ctrl: ctrl}
	mock.recorder = &MockGitHubGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGitHubGateway) EXPECT() *MockGitHubGatewayMockRecorder {
	return m.recorder
}

// GetBlob mocks base method
func (m *MockGitHubGateway) GetBlob(arg0 context.Context, arg1 prchecklist.ChecklistRef, arg2 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlob", arg0, arg1, arg2)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlob indicates an expected call of GetBlob
func (mr *MockGitHubGatewayMockRecorder) GetBlob(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlob", reflect.TypeOf((*MockGitHubGateway)(nil).GetBlob), arg0, arg1, arg2)
}

// GetPullRequest mocks base method
func (m *MockGitHubGateway) GetPullRequest(arg0 context.Context, arg1 prchecklist.ChecklistRef, arg2 bool) (*prchecklist.PullRequest, context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPullRequest", arg0, arg1, arg2)
	ret0, _ := ret[0].(*prchecklist.PullRequest)
	ret1, _ := ret[1].(context.Context)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetPullRequest indicates an expected call of GetPullRequest
func (mr *MockGitHubGatewayMockRecorder) GetPullRequest(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPullRequest", reflect.TypeOf((*MockGitHubGateway)(nil).GetPullRequest), arg0, arg1, arg2)
}

// GetRecentPullRequests mocks base method
func (m *MockGitHubGateway) GetRecentPullRequests(arg0 context.Context) (map[string][]*prchecklist.PullRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecentPullRequests", arg0)
	ret0, _ := ret[0].(map[string][]*prchecklist.PullRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecentPullRequests indicates an expected call of GetRecentPullRequests
func (mr *MockGitHubGatewayMockRecorder) GetRecentPullRequests(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecentPullRequests", reflect.TypeOf((*MockGitHubGateway)(nil).GetRecentPullRequests), arg0)
}

// SetRepositoryStatusAs mocks base method
func (m *MockGitHubGateway) SetRepositoryStatusAs(arg0 context.Context, arg1, arg2, arg3, arg4, arg5, arg6 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetRepositoryStatusAs", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetRepositoryStatusAs indicates an expected call of SetRepositoryStatusAs
func (mr *MockGitHubGatewayMockRecorder) SetRepositoryStatusAs(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRepositoryStatusAs", reflect.TypeOf((*MockGitHubGateway)(nil).SetRepositoryStatusAs), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}
